{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport api from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield api.post('/auth/register', {\n          username: username,\n          email: email,\n          password: password\n        });\n        Alert.alert('Registro com sucesso!', 'Você já pode fazer o login.');\n        navigation.navigate('Login');\n      } catch (error) {\n        Alert.alert('Erro no registro', 'Não foi possível criar a conta.');\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Registro\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome de usu\\xE1rio\",\n      value: username,\n      onChangeText: setUsername,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Registrar\",\n      onPress: handleRegister\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    padding: 10\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Alert","api","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleRegister","_ref2","_asyncToGenerator","post","alert","navigate","error","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","onPress","create","flex","justifyContent","padding","fontSize","fontWeight","marginBottom","textAlign","height","borderColor","borderWidth"],"sources":["C:/Users/ITX Gamer/Trabalho-de-Conslusao-de-Curso-TCC-/frontend/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';\r\nimport api from '../services/api';\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleRegister = async () => {\r\n        try {\r\n            await api.post('/auth/register', { username, email, password });\r\n            Alert.alert('Registro com sucesso!', 'Você já pode fazer o login.');\r\n            navigation.navigate('Login');\r\n        } catch (error) {\r\n            Alert.alert('Erro no registro', 'Não foi possível criar a conta.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Registro</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Nome de usuário\"\r\n                value={username}\r\n                onChangeText={setUsername}\r\n                autoCapitalize=\"none\"\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Senha\"\r\n                value={password}\r\n                onChangeText={setPassword}\r\n                secureTextEntry\r\n            />\r\n            <Button title=\"Registrar\" onPress={handleRegister} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 12,\r\n        padding: 10,\r\n    },\r\n});\r\n\r\nexport default RegisterScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}