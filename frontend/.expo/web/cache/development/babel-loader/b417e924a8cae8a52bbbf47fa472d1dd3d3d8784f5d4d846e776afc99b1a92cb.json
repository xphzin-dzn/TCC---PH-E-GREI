{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport api from \"../services/api\";\nimport Chart from \"../components/Chart\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DashboardScreen = function DashboardScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    sensorData = _useState2[0],\n    setSensorData = _useState2[1];\n  var token = route.params.token;\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield api.get('/sensors', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setSensorData(response.data);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [token]);\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Dashboard de Sensores\"\n      }), _jsx(Chart, {\n        data: sensorData,\n        valueKey: \"temperature\",\n        title: \"Temperatura\"\n      }), _jsx(Chart, {\n        data: sensorData,\n        valueKey: \"humidity\",\n        title: \"Umidade\"\n      }), _jsx(Chart, {\n        data: sensorData,\n        valueKey: \"pressure\",\n        title: \"Press\\xE3o\"\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  }\n});\nexport default DashboardScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","Dimensions","ScrollView","api","Chart","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","route","_useState","_useState2","_slicedToArray","sensorData","setSensorData","token","params","fetchData","_ref2","_asyncToGenerator","response","get","headers","Authorization","data","error","console","apply","arguments","children","style","styles","container","title","valueKey","create","flex","padding","alignItems","fontSize","fontWeight","marginBottom"],"sources":["C:/Users/ITX Gamer/Trabalho-de-Conslusao-de-Curso-TCC-/frontend/src/screens/DashboardScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Dimensions, ScrollView } from 'react-native';\r\nimport api from '../services/api';\r\nimport Chart from '../components/Chart';\r\n\r\nconst DashboardScreen = ({ route }) => {\r\n    const [sensorData, setSensorData] = useState([]);\r\n    const { token } = route.params;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await api.get('/sensors', {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                setSensorData(response.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [token]);\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>Dashboard de Sensores</Text>\r\n                <Chart data={sensorData} valueKey=\"temperature\" title=\"Temperatura\" />\r\n                <Chart data={sensorData} valueKey=\"humidity\" title=\"Umidade\" />\r\n                <Chart data={sensorData} valueKey=\"pressure\" title=\"PressÃ£o\" />\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 10,\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n});\r\n\r\nexport default DashboardScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,GAAG;AACV,OAAOC,KAAK;AAA4B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC5B,IAAAC,SAAA,GAAoChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAQI,KAAK,GAAKN,KAAK,CAACO,MAAM,CAAtBD,KAAK;EAEbpB,SAAS,CAAC,YAAM;IACZ,IAAMsB,SAAS;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC1B,IAAI;UACA,IAAMC,QAAQ,SAASnB,GAAG,CAACoB,GAAG,CAAC,UAAU,EAAE;YACvCC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUR,KAAK;YAAG;UAChD,CAAC,CAAC;UACFD,aAAa,CAACM,QAAQ,CAACI,IAAI,CAAC;QAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACxB;MACJ,CAAC;MAAA,gBATKR,SAASA,CAAA;QAAA,OAAAC,KAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,GASd;IAEDX,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,OACIX,IAAA,CAACJ,UAAU;IAAA6B,QAAA,EACPvB,KAAA,CAACV,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GAC1BzB,IAAA,CAACP,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACE,KAAM;QAAAJ,QAAA,EAAC;MAAqB,CAAM,CAAC,EACvDzB,IAAA,CAACF,KAAK;QAACsB,IAAI,EAAEX,UAAW;QAACqB,QAAQ,EAAC,aAAa;QAACD,KAAK,EAAC;MAAa,CAAE,CAAC,EACtE7B,IAAA,CAACF,KAAK;QAACsB,IAAI,EAAEX,UAAW;QAACqB,QAAQ,EAAC,UAAU;QAACD,KAAK,EAAC;MAAS,CAAE,CAAC,EAC/D7B,IAAA,CAACF,KAAK;QAACsB,IAAI,EAAEX,UAAW;QAACqB,QAAQ,EAAC,UAAU;QAACD,KAAK,EAAC;MAAS,CAAE,CAAC;IAAA,CAC7D;EAAC,CACC,CAAC;AAErB,CAAC;AAED,IAAMF,MAAM,GAAGjC,UAAU,CAACqC,MAAM,CAAC;EAC7BH,SAAS,EAAE;IACPI,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EAChB,CAAC;EACDL,KAAK,EAAE;IACHM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAClB;AACJ,CAAC,CAAC;AAEF,eAAelC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}